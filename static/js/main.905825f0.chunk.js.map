{"version":3,"sources":["gamehelpers.js","components/Quadratic/StyledQuadratic.js","shapes.js","hooks/useStage.js","components/Cell/StyledCell.js","components/Cell/Cell.js","components/Stage/StyledStage.js","components/Stage/Stage.js","components/Display/StyledDisplay.js","components/Display/Display.js","components/StartButton/StartButton.js","components/Quadratic/Quadratic.js","hooks/usePlayer.js","hooks/useGameStatus.js","hooks/useInterval.js","App.js","reportWebVitals.js","index.js"],"names":["createStage","x","Array","from","fill","checkCollision","player","stage","moveX","moveY","y","shape","length","pos","StyledQuadraticWrapper","styled","div","StyledQuadratic","INITIALSHAPES","0","color","I","J","L","O","S","T","Z","ADDITIONALSHAPES","U","C","c","iRandomShape","iRandShape","Math","floor","random","iARandomShape","useStage","resetPlayer","currentStage","resetNewPlayer","useState","setStage","rowsCleared","setRowsCleared","useEffect","sweepRows","newStage","reduce","ack","row","findIndex","cell","prev","unshift","push","prevStage","map","forEach","value","collided","updateStage","StyledCell","props","type","Cell","React","memo","StyledStage","height","width","Stage","StyledDisplay","gameOver","Display","text","StyledStartButton","button","StartButton","callback","onClick","counter","Quadratic","dropTime","setDropTime","setGameOver","setPlayer","rotate","matrix","dir","mtrx","_","index","column","reverse","useCallback","STAGE_WIDTH","clonedPlayer","JSON","parse","stringify","offset","usePlayer","updatePlayerPos","playerRotate","score","setScore","rows","setRows","level","setLevel","linePoints","calcScore","useGameStatus","movePlayer","drop","complete","Infinity","localStorage","getItem","console","log","setItem","dropPlayer","delay","savedCallback","useRef","current","id","setInterval","clearInterval","useInterval","role","tabIndex","onKeyDown","e","keyCode","move","onKeyUp","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.905825f0.chunk.js","sourcesContent":["export var STAGE_WIDTH = 12;\nexport var STAGE_HEIGHT = 20;\nexport const createStage = (x = 0) =>\n  {\n    return Array.from(Array(STAGE_HEIGHT + x), () => Array(STAGE_WIDTH + x).fill([0, 'clear']));\n  };\nexport const checkCollision = (player, stage, { x: moveX, y: moveY }) => {\n  for (let y = 0; y < player.shape.length; y += 1) {\n    for (let x = 0; x < player.shape[y].length; x += 1) {\n      if (player.shape[y][x] !== 0) {\n        if (\n          !stage[y + player.pos.y + moveY] ||\n          !stage[y + player.pos.y + moveY][x + player.pos.x + moveX] ||\n          stage[y + player.pos.y + moveY][x + player.pos.x + moveX][1] !==\n            'clear'\n        ) {\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n};\n","import styled from 'styled-components';\nexport const StyledQuadraticWrapper = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background-size: cover;\n  overflow: hidden;\n`;\nexport const StyledQuadratic = styled.div`\n  display: flex;\n  align-items: flex-start;\n  padding: 40px;\n  margin: 0 auto;\n  max-width: 900px;\n  \n  aside {\n    width: 100%;\n    max-width: 200px;\n    display: block;\n    padding: 0 20px;\n  }\n`;","export const INITIALSHAPES = {\n  0: { shape: [[0]], color: '0, 0, 0' },\n  I: {\n      shape: [\n          [0, 'I', 0, 0],\n          [0, 'I', 0, 0],\n          [0, 'I', 0, 0],\n          [0, 'I', 0, 0]\n      ],\n      color: '80, 227, 230' \n  },\n  J: {\n    shape: [\n        [0, 'J', 0],\n        [0, 'J', 0],\n        ['J', 'J', 0]\n    ],\n    color: '36, 95, 223' \n  },\n  L: {\n    shape: [\n        [0, 'L', 0],\n        [0, 'L', 0],\n        [0, 'L', 'L']\n    ],\n    color: '223, 173, 36' \n  },\n  O: {\n    shape: [\n        ['O', 'O'],\n        ['O', 'O']\n    ],\n    color: '223, 217, 36' \n  },\n  S: {\n    shape: [\n        [0, 'S', 'S'],\n        ['S', 'S', 0],\n        [0, 0, 0]\n    ],\n    color: '48, 211, 256' \n  },\n  T: {\n    shape: [\n        [0, 0, 0],\n        ['T', 'T', 'T'],\n        [0, 'T', 0]\n    ],\n    color: '132, 61, 198' \n  },\n  Z: {\n    shape: [\n        ['Z', 'Z', 0],\n        [0, 'Z', 'Z'],\n        [0, 0, 0]\n    ],\n    color: '7, 78, 78' \n  }\n}\nexport const ADDITIONALSHAPES = \n  {\n  U: {\n    shape: [\n        [0, 0, 0, 0],\n        ['U', 0, 0, 'U'],\n        ['U', 0, 0, 'U'],\n        ['U', 'U', 'U', 'U']\n    ],\n    color: '80, 227, 230' \n  },\n  C: {\n    shape: [\n        [0, 0, 0],\n        ['C', 0, 'C'],\n        ['C', 'C', 'C']\n    ],\n    color: '80, 227, 230' \n  },\n  c: {\n    shape: [\n      ['c', 0],\n      ['c', 'c']\n  ],\n    color: '80, 227, 230' \n  }  \n, ...INITIALSHAPES };\nexport const iRandomShape = () => {\n  const shape = 'IJLOSTZ';\n  const iRandShape = shape[Math.floor(Math.random() * shape.length)];\n  return INITIALSHAPES[iRandShape];\n}\n\nexport const iARandomShape = () => {\n  const shape = 'IJLOSTZUCc';\n  const iRandShape = shape[Math.floor(Math.random() * shape.length)];\n  return ADDITIONALSHAPES[iRandShape];\n}","import { useState, useEffect } from 'react';\nimport { createStage } from '../gamehelpers';\nexport const useStage = (player, resetPlayer, currentStage, resetNewPlayer) => {\n  const [stage, setStage] = useState(createStage(currentStage));\n  const [rowsCleared, setRowsCleared] = useState(0);\n  useEffect(() => {\n    setRowsCleared(0);\n    const sweepRows = newStage =>\n      newStage.reduce((ack, row) => {\n        if (row.findIndex(cell => cell[0] === 0) === -1) {\n          setRowsCleared(prev => prev + 1);\n          ack.unshift(new Array(newStage[0].length).fill([0, 'clear']));\n          return ack;\n        }\n        ack.push(row);\n        return ack;\n      }, []);\n    const updateStage = (prevStage) => {\n      const newStage = prevStage.map(row =>\n        row.map(cell => (cell[1] === 'clear' ? [0, 'clear'] : cell))\n      );\n      player.shape.forEach((row, y) => {\n        row.forEach((value, x) => {\n          if (value !== 0) {\n            newStage[y + player.pos.y][x + player.pos.x] = [\n              value,\n              `${player.collided ? 'merged' : 'clear'}`,\n            ];\n          }\n        });\n      });\n      if (player.collided) {\n        if(currentStage < 1) {\n          resetPlayer();\n          return sweepRows(newStage);  \n        } else {\n          resetNewPlayer();\n          return sweepRows(newStage);\n        }\n      }\n      return newStage;\n    };\n    setStage(prev => updateStage(prev)); \n}, [\n    player.collided,\n    player.pos.x,\n    player.pos.y,\n    player.shape,\n    resetPlayer,\n    resetNewPlayer,\n    currentStage\n  ]);\n  return [stage, setStage, rowsCleared];\n};\n","import styled from 'styled-components';\nexport const StyledCell = styled.div`\n  width: auto;\n  background: rgba(${props => props.color}, 0.8);\n  border: ${props => (props.type === 0 ? '0px solid' : '4px solid')};\n  border-bottom-color: rgba(${props => props.color}, 0.1);\n  border-top-color: rgba(${props => props.color}, 1);\n  border-left-color: rgba(${props => props.color}, 0.3);\n  border-right-color: rgba(${props => props.color}, 1);\n`;","import React from 'react';\nimport { StyledCell } from './StyledCell';\nimport { ADDITIONALSHAPES } from '../../shapes';\n\nconst Cell = ({ type }) => (\n  <StyledCell type={type} color={ADDITIONALSHAPES[type].color}>\n  </StyledCell>\n);\nexport default React.memo(Cell);\n","import styled from 'styled-components';\nexport const StyledStage = styled.div`\n  display: grid;\n  grid-template-rows: repeat(\n    ${props => props.height},\n    calc(25vw / ${props => props.width})\n  );\n  grid-template-columns: repeat(${props => props.width}, 1fr);\n  grid-gap: 1px;\n  border: 2px solid #333;\n  width: 100%;\n  max-width: 25vw;\n  background: #111;\n`;","import React from 'react';\nimport Cell from '../Cell/Cell';\nimport { StyledStage } from './StyledStage';\nconst Stage = ({ stage }) => {\n  return(\n    <StyledStage width={stage[0].length} height={stage.length}>\n      {stage.map(row => row.map((cell, x) => <Cell key={x} type={cell[0]} />))}\n    </StyledStage>\n  );\n};\nexport default React.memo(Stage);","import styled from 'styled-components';\nexport const StyledDisplay = styled.div`\n  box-sizing: border-box;\n  display: flex;\n  align-items: center;\n  margin: 0 0 20px 0;\n  padding: 20px;\n  border: 4px solid #333;\n  min-height: 30px;\n  width: 100%;\n  border-radius: 20px;\n  color: ${props => (props.gameOver ? 'red' : '#999')};\n  background: #000;\n  font-family: Pixel, Arial, Helvetica, sans-serif;\n  font-size: 0.8rem;\n`;\n","import React from 'react';\nimport { StyledDisplay } from './StyledDisplay';\nconst Display = ({ gameOver, text }) => (\n  <StyledDisplay gameOver={gameOver}>{text}</StyledDisplay>\n);\nexport default Display;","import React from 'react';\nimport styled from 'styled-components';\nconst StyledStartButton = styled.button`\n  box-sizing: border-box;\n  margin: 0 0 20px 0;\n  padding: 20px;\n  min-height: 30px;\n  width: 100%;\n  border-radius: 20px;\n  border: none;\n  color: white;\n  background: #333;\n  font-family: Pixel, Arial, Helvetica, sans-serif;\n  font-size: 1rem;\n  outline: none;\n  cursor: pointer;\n`;\nconst StartButton = ({ callback }) => (\n  <StyledStartButton onClick={callback}>Start Game</StyledStartButton>\n);\nexport default StartButton;\n","import React, { useState } from 'react';\nimport { createStage, checkCollision } from '../../gamehelpers';\nimport { StyledQuadraticWrapper, StyledQuadratic} from './StyledQuadratic';\nimport { useInterval } from '../../hooks/useInterval';\nimport { usePlayer } from '../../hooks/usePlayer';\nimport { useStage } from '../../hooks/useStage';\nimport { useGameStatus } from '../../hooks/useGameStatus';\nimport Stage from '../Stage/Stage';\nimport Display from '../Display/Display';\nimport StartButton from '../StartButton/StartButton';\nvar counter = 1;\nvar currentStage = 0;\nconst Quadratic = () => {\n  const [dropTime, setDropTime] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n  const [player, updatePlayerPos, resetPlayer, playerRotate, resetNewPlayer] = usePlayer(currentStage);\n  var [stage, setStage, rowsCleared] = useStage(player, resetPlayer, currentStage, resetNewPlayer);\n  const [score, setScore, rows, setRows, level, setLevel] = useGameStatus(\n    rowsCleared\n  );\n  const movePlayer = dir => {\n    if (!checkCollision(player, stage, { x: dir, y: 0 })) {\n      updatePlayerPos({ x: dir, y: 0 });\n    }\n  };\n  const keyUp = ({ keyCode }) => {\n    if (!gameOver) {\n      if (keyCode === 40) {\n        setDropTime(1000 / (level + 1));\n      }\n    }\n  };\n  const expand = () => {\n    currentStage++;\n    setStage(createStage(currentStage));\n    counter++;\n  }\n  const startGame = () => {\n    setStage(createStage());\n    setDropTime(1000);\n    resetPlayer();\n    setScore(0);\n    setLevel(0);\n    setRows(0);\n    setGameOver(false);\n  };\n  const drop = (complete) => {\n    if(rows / 5 >= counter && rows / 5 < counter + 5) {\n      expand();\n    }\n    if (complete === true) {\n      setDropTime(Infinity);\n    }\n    if (!checkCollision(player, stage, { x: 0, y: 1 })) {\n      updatePlayerPos({ x: 0, y: 1, collided: false });\n    } else {\n      if (player.pos.y < 1) {\n        setDropTime(null);\n        setGameOver(true);\n        if (score > localStorage.getItem('highScore')) {\n          console.log('New High Score!');\n          localStorage.setItem('highScore', score);\n        }\n      }\n      updatePlayerPos({ x: 0, y: 0, collided: true });\n      setDropTime(1000 / (rows + 1) + 300);\n    }\n  };\n  const dropPlayer = (complete) => {\n    setDropTime(null);\n    if (complete) {\n      drop(true);\n    }\n    drop(false);\n  };\n  useInterval(() => {\n    drop();\n  }, dropTime);\n  const move = ({ keyCode }) => {\n    if (!gameOver) {\n      if (keyCode === 37) {\n        movePlayer(-1);\n      } else if (keyCode === 39) {\n        movePlayer(1);\n      } else if (keyCode === 40) {\n        dropPlayer();\n      } else if (keyCode === 38) {\n        playerRotate(stage, 1);\n      } else if (keyCode === 191) {\n        dropPlayer(true);\n      }\n    }\n  };\n  return (\n    <StyledQuadraticWrapper\n      role=\"button\"\n      tabIndex=\"0\"\n      onKeyDown={e => move(e)}\n      onKeyUp={keyUp}\n    >\n      <StyledQuadratic>\n        <Stage stage={stage}/>\n        <aside>\n          {gameOver ? (\n            <Display gameOver={gameOver} text=\"Game Over\" />\n          ) : (\n            <div>\n\n              <Display text={`High Score: ${localStorage.getItem('highScore') ? localStorage.getItem('highScore') : 0}`} />\n              <Display text={`Score: ${score}`} />\n              <Display text={`Rows Cleared: ${rows}`} />\n            </div>\n          )}\n          <StartButton callback={startGame} />\n        </aside>\n      </StyledQuadratic>\n    </StyledQuadraticWrapper>\n  );\n};\nexport default Quadratic;","import { useState, useCallback } from 'react';\nimport { iRandomShape, ADDITIONALSHAPES, iARandomShape } from '../shapes';\nimport { STAGE_WIDTH, checkCollision } from '../gamehelpers';\nexport const usePlayer = () => {\n  const [player, setPlayer] = useState({\n    pos: { x: 0, y: 0 },\n    shape: ADDITIONALSHAPES[0].shape,\n    collided: false,\n  });\n  function rotate(matrix, dir) {\n    const mtrx = matrix.map((_, index) => matrix.map(column => column[index]));\n    if (dir > 0) return mtrx.map(row => row.reverse());\n    return mtrx.reverse();\n  }\n  function playerRotate(stage, dir) {\n    const clonedPlayer = JSON.parse(JSON.stringify(player));\n    clonedPlayer.shape = rotate(clonedPlayer.shape, dir);\n    const pos = clonedPlayer.pos.x;\n    let offset = 1;\n    while (checkCollision(clonedPlayer, stage, { x: 0, y: 0 })) {\n      clonedPlayer.pos.x += offset;\n      offset = -(offset + (offset > 0 ? 1 : -1));\n      if (offset > clonedPlayer.shape[0].length) {\n        rotate(clonedPlayer.shape, -dir);\n        clonedPlayer.pos.x = pos;\n        return;\n      }\n    }\n    setPlayer(clonedPlayer);\n  }\n  const updatePlayerPos = ({ x, y, collided }) => {\n    setPlayer(prev => ({\n      ...prev,\n      pos: { x: (prev.pos.x += x), y: (prev.pos.y += y) },\n      collided,\n    }));\n  };\n  const resetPlayer = useCallback(() => {\n    setPlayer({\n      pos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\n      shape: iRandomShape().shape,\n      collided: false,\n    });\n  }, []);\n  const resetNewPlayer = useCallback(() => {\n    setPlayer({\n      pos: { x: STAGE_WIDTH / 2 - 2, y: 0 },\n      shape: iARandomShape().shape,\n      collided: false,\n    });\n  }, []);\n  return [player, updatePlayerPos, resetPlayer, playerRotate, resetNewPlayer];\n};\n","import { useState, useEffect, useCallback } from 'react';\nexport const useGameStatus = rowsCleared => {\n  const [score, setScore] = useState(0);\n  const [rows, setRows] = useState(0);\n  const [level, setLevel] = useState(0);\n  const linePoints = [40, 100, 300, 1200];\n  const calcScore = useCallback(() => {\n    if (rowsCleared > 0) {\n      setScore(prev => prev + linePoints[rowsCleared - 1] * (level + 1));\n      setRows(prev => prev + rowsCleared);\n    }\n  }, [level, linePoints, rowsCleared]);\n  useEffect(() => {\n    calcScore();\n  }, [calcScore, rowsCleared, score]);\n  return [score, setScore, rows, setRows, level, setLevel];\n};","import { useEffect, useRef } from 'react';\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}","import './App.css';\nimport Quadratic from './components/Quadratic/Quadratic';\nimport React from 'react';\nconst App = () => {\n  return(\n    <div className=\"App\">\n      <Quadratic />\n    </div>\n  )\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}